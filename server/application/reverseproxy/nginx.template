events {
  worker_connections 1024;
}

http {
  # NGINX will handle gzip compression of responses from the app server
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;

  server {
    listen 80;
    server_name localhost;
    location / {
        root    /usr/share/nginx/html;
        index   index.html index.htm;
    }

    location = /health {
            # access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"ok"}';
    }

    # orders api
    location ~ ^/orders {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the expectations will
      # get sent to the application server
      proxy_pass http://orders-api.${NAMESPACE}.sc:3010;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
    }

    # products api
    location ~ ^/products {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the expectations will
      # get sent to the application server
      proxy_pass http://products-api.${NAMESPACE}.sc:3010;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
    }

    # users api
    location ~ ^/users {
      # Reject requests with unsupported HTTP method
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
      }

      # Only requests matching the expectations will
      # get sent to the application server
      proxy_pass http://users-api.${NAMESPACE}.sc:3010;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
    }
  }
}